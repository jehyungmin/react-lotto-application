{"version":3,"sources":["modules/counter.js","modules/post.js","Components/LottoBall/LottoBall.js","Components/TitleLabal/TitleLabal.js","Components/LottoballGroup/LottoballGroup.js","Components/Turn.js","pages/Home.js","Components/CreateLottoBall/CreateLottoBall.js","Components/Createball/Createball.js","Components/Game.js","Components/CreateballList/CreateballList.js","pages/About.js","Components/WinNumber/WinNumber.js","Components/Menu.js","App.js","Root.js","serviceWorker.js","modules/index.js","store.js","index.js"],"names":["nowDate","Date","toISOString","substr","replace","dateArray1","split","dateArray2","dateObj1","Number","dateObj2","betweenDate","parseInt","getTime","increment","createAction","decrement","handleActions","_handleActions","Object","defineProperty","state","action","getPostPending","getPostSuccess","getPostFailure","getPost","postId","dispatch","axios","get","concat","getPostAPI","then","response","catch","error","post_handleActions","objectSpread","pending","console","log","result","payload","data","returnValue","LottoBall","_ref","drwtNo","styleName","react_default","a","createElement","className","TitleLabal","title","value","numberFormat","LottoballGroup","bollGroup","Components_LottoBall_LottoBall","drwtNo1","drwtNo2","drwtNo3","drwtNo4","drwtNo5","drwtNo6","bnusNo","Turn","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","_this$props","PostActions","turn","numberWithCommas","n","parts","toString","lotto","prevProps","prevState","_this$props2","CounterActions","post","loading","href","onClick","Components_LottoballGroup_LottoballGroup","Components_TitleLabal_TitleLabal","drwNoDate","firstAccumamnt","firstPrzwnerCo","firstWinamnt","Component","defaultProps","connect","counter","bindActionCreators","counterActions","postActions","Home","history","src_Components_Turn","CreateLottoBall","cNumber","i","Createball","_this$props$info","info","lotto_nums","afterStr","id","Components_CreateLottoBall_CreateLottoBall","Game","chk_Click","winNumber","bonus_number","generate","_","times","push","shuffle","length","setState","winGenerate","handleSubmit","e","preventDefault","onCreate","join","winHandleSubmit","onWinCreate","reload","window","location","onlyOne","getRandomNum","Math","floor","random","checkDuplicatedNum","lotto_num","ball_num","includes","getWinNumberAnsBonusNumber","getLottoNums","checkWinLotto","information","onSubmit","type","CreateballList","winData","list","map","Components_Createball_Createball","key","About","winInformation","handleCreate","handleWinNumCreate","handleRemove","query","match","queryString","parse","search","infoLength","color","style","src_Components_Game","Components_CreateballList_CreateballList","Menu","activeStyle","fontWeight","react_router_dom","exact","to","App","src_Components_Menu","react_router","path","component","Root","src_App_0","Boolean","hostname","combineReducers","logger","createLogger","store","createStore","modules","applyMiddleware","ReduxThunk","ReactDOM","render","es","src_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57e1618c.chunk.js","sourcesContent":["import { handleActions, createAction } from 'redux-actions';\r\n\r\nconst firstDate = \"2002-12-01\";\r\nconst currDay = 24 * 60 * 60 * 1000;\r\n// 1000을 나누면 초\r\n// 60을 또 나누면 분\r\n// 60을 또 나누면 시간\r\n// 24를 또 나누면 일 단위\r\n\r\nconst nowDate = new Date().toISOString().substr(0,10).replace('T',' ');//현제날짜 불러오기\r\n\r\nconst dateArray1 = firstDate.split(\"-\");\r\nconst dateArray2 = nowDate.split(\"-\");\r\nconst dateObj1 = new Date(dateArray1[0], Number(dateArray1[1]) - 1, dateArray1[2]);//로또 시작일\r\nconst dateObj2 = new Date(dateArray2[0], Number(dateArray2[1]) - 1, dateArray2[2]);//오늘날\r\nconst betweenDate = parseInt((dateObj2.getTime() - dateObj1.getTime())/currDay/7);\r\n\r\nconst INCREMENT = 'INCREMENT';\r\nconst DECREMENT = 'DECREMENT';\r\n\r\nexport const increment = createAction(INCREMENT);\r\nexport const decrement = createAction(DECREMENT);\r\n\r\nexport default handleActions({\r\n    [INCREMENT]: (state, action) => state + 1,\r\n    [DECREMENT]: (state, action) => state - 1\r\n\r\n}, betweenDate)\r\n","import {handleActions, createAction} from 'redux-actions';\r\n\r\nimport axios from 'axios';\r\n\r\nfunction getPostAPI (postId) {\r\n    return axios.get(`/common.do?method=getLottoNumber&drwNo=${postId}`)\r\n}\r\n\r\nconst GET_POST_PENDING = 'GET_POST_PENDING';\r\nconst GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nconst GET_POST_FAILURE = 'GET_POST_FAILURE';\r\n\r\nconst getPostPending = createAction(GET_POST_PENDING);\r\nconst getPostSuccess = createAction(GET_POST_SUCCESS);\r\nconst getPostFailure = createAction(GET_POST_FAILURE);\r\n\r\nexport const getPost = (postId) => dispatch => {\r\n    //먼저 요청이 시작했단느 것을 알립니다.\r\n    dispatch(getPostPending());\r\n\r\n    //요청을 시작합니다. 여기에서 만등 promise를 return 해야 나중에 컴포넌트에서\r\n    //호출할때 getPost().then(...) 을 할 수 있습니다.\r\n    return getPostAPI(postId).then((response)=> {\r\n        //요청이 성공했다면 서버 응답 내용을 payload로 설정하여\r\n        //GET_POST_SUCCESS액션을 디스패치 합니다.\r\n        dispatch(getPostSuccess(response))\r\n        //나중에 getPostAPI.then을 했을 때 then 에 전달하는 \r\n        //함수에서response에 접글할수 있게 합니다.\r\n        return response;\r\n    }).catch(error => {\r\n        //오류가 발생하면 우류 내용을 payload로 설정하여\r\n        //GET_POST_FAILURE액션을 디스패치 합니다.\r\n        dispatch(getPostFailure(error));\r\n        //error를 throw하여 이 함수를 실행한 후 \r\n        //다시 한 번 catch 를 합수있게 합니다.\r\n        throw(error);\r\n    })\r\n}\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_POST_PENDING]: (state, action) => {\r\n        return{\r\n            ...state,\r\n            pending: true,\r\n            error: false\r\n        };\r\n    },\r\n    [GET_POST_SUCCESS]: (state, action) => {\r\n        console.log(\"#### action : \", action);\r\n        // const { drwtNo1, drwtNo2, drwtNo3, drwtNo4, drwtNo5, drwtNo6, bnusNo, drwNoDate, firstAccumamnt, firstPrzwnerCo, firstWinamnt, returnValue} = action.payload.data;\r\n        const result = action.payload.data;\r\n        console.log('action.payload.data :', result);\r\n        console.log('result.returnValue :', result.returnValue);\r\n\r\n        let newState ;\r\n        if ( result.returnValue !== 'success') {\r\n            newState = {\r\n                ...state,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            }\r\n        } else {\r\n            newState = {\r\n                ...state,\r\n                pending: false,\r\n                error: false,\r\n                data: action.payload.data\r\n            }\r\n        }\r\n        \r\n        return newState;\r\n        // return {\r\n        //     ...state,\r\n        //     pending: false,\r\n        //     // data: {\r\n        //     //     drwtNo1,\r\n        //     //     drwtNo2,\r\n        //     //     drwtNo3,\r\n        //     //     drwtNo4,\r\n        //     //     drwtNo5,\r\n        //     //     drwtNo6,\r\n        //     //     bnusNo,\r\n        //     //     drwNoDate,\r\n        //     //     firstAccumamnt,\r\n        //     //     firstPrzwnerCo,\r\n        //     //     firstWinamnt,\r\n        //     //     returnValue\r\n        //     // }\r\n        //     data: action.payload.data\r\n        // };\r\n    },\r\n    [GET_POST_FAILURE]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            pending: false,\r\n            error: true\r\n        };\r\n    },\r\n\r\n}, initialState);\r\n","import React from'react';\r\nimport './LottoBall.css';\r\n\r\n\r\nconst LottoBall = ({drwtNo}) => {\r\n    \r\n    let styleName ='lottoNum'\r\n    if(drwtNo > 1 && drwtNo <= 10){\r\n        styleName = 'lottoNum num-1-10'\r\n    } else if (drwtNo > 10 && drwtNo <= 20) {\r\n        styleName = 'lottoNum num-11-20'\r\n    } else if (drwtNo > 20 && drwtNo <= 30) {\r\n        styleName = 'lottoNum num-21-30'\r\n    } else if (drwtNo > 30 && drwtNo <= 40) {\r\n        styleName = 'lottoNum num-31-40'\r\n    }else{\r\n        styleName = 'lottoNum num-41-45'\r\n    }\r\n     \r\n    return (\r\n        <div>\r\n            <p className={styleName}>{drwtNo}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LottoBall;","import React from 'react';\r\nimport './TitleLabal.css';\r\n\r\nconst TitleLabal = ({ title, value }) => {\r\n\r\n    const numberFormat = (value) => {\r\n        // type=== number\r\n        // script func -> return\r\n        // else return value\r\n        return value\r\n    }\r\n    return (\r\n        <div className='titlelabel-wrap'>\r\n            <div className='titlelabel-title'>\r\n                {title}\r\n            </div>\r\n            :\r\n            <div className='titlelabel-value'>\r\n                {numberFormat(value)}\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TitleLabal;","import React from 'react';\r\nimport { LottoBall } from 'Components/LottoBall';\r\nimport './LottoballGroup.css';\r\n\r\nconst LottoballGroup = ({ bollGroup }) => {\r\n    return (\r\n        <div className=\"lottoBallGroup\">\r\n            <LottoBall drwtNo={bollGroup.drwtNo1} />\r\n            <LottoBall drwtNo={bollGroup.drwtNo2} />\r\n            <LottoBall drwtNo={bollGroup.drwtNo3} />\r\n            <LottoBall drwtNo={bollGroup.drwtNo4} />\r\n            <LottoBall drwtNo={bollGroup.drwtNo5} />\r\n            <LottoBall drwtNo={bollGroup.drwtNo6} />\r\n            {/* <p>+ </p> */}\r\n            <LottoBall drwtNo={bollGroup.bnusNo} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LottoballGroup;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as counterActions from '../modules/counter';\r\nimport { bindActionCreators } from 'redux';\r\nimport './Turn.css';\r\nimport * as postActions from '../modules/post';\r\nimport {LottoBall} from 'Components/LottoBall'\r\nimport { TitleLabal } from './TitleLabal';\r\nimport { LottoballGroup } from './LottoballGroup';\r\n// import './Button.css';\r\n\r\nclass Turn extends Component {\r\n    static defaultProps = {\r\n        lotto: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lotto: []\r\n        };\r\n    }\r\n\r\n    loadData = () => {\r\n        const { PostActions, turn } = this.props;\r\n        PostActions.getPost(turn);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\");\r\n        // axios.get('/common.do?method=getLottoNumber&drwNo=852')\r\n        // .then(res => console.log(res))\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.turn !== prevProps.turn) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    // stringFormat = (number) => {\r\n    //     number.replace(/(\\d)(?=(?:\\d{3})+(?!\\d))/g, '$1,');\r\n    //     return number;\r\n    // }\r\n\r\n    numberWithCommas = (n) => {\r\n    var parts = n.toString().split(\".\");\r\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + (parts[1] ? \".\" + parts[1] : \"\");\r\n    }\r\n\r\n    render() {\r\n        const { CounterActions, turn, post, error, loading } = this.props;\r\n        //console.log(\"123\", this.state.lotto)\r\n        const returnValue = post.returnValue;\r\n        console.log('return: ', returnValue);\r\n        console.log('post: ', post);\r\n        return (\r\n            <div >\r\n                <div className=\"center\">\r\n                <h2 className=\"turn\">{turn}회차</h2>\r\n                    <div className=\"\"> <a href=\"#\" className=\"btn btn-sm animated-button victoria-three\"><p onClick={CounterActions.increment} className=\"fontrelation\">+</p></a> </div>\r\n                    <div className=\"\"> <a href=\"#\" className=\"btn btn-sm animated-button victoria-three\"><p onClick={CounterActions.decrement} className=\"fontrelation\">-</p></a> </div>\r\n                </div>\r\n                {\r\n                    loading\r\n                         ? (<h2>로딩중...</h2>)\r\n                        : (\r\n                            error\r\n                                ? (<h2>아직 {turn}회차 발표일이 아닙니다.</h2>)\r\n                                : (\r\n                                    <div>\r\n                                        <div className='lottoball-group'>\r\n                                            {/* <LottoBall drwtNo={post.drwtNo1} />\r\n                                            <LottoBall drwtNo={post.drwtNo2} />\r\n                                            <LottoBall drwtNo={post.drwtNo3} />\r\n                                            <LottoBall drwtNo={post.drwtNo4} />\r\n                                            <LottoBall drwtNo={post.drwtNo5} />\r\n                                            <LottoBall drwtNo={post.drwtNo6} />\r\n                                            <LottoBall drwtNo={post.bnusNo} /> */}\r\n                                            <LottoballGroup bollGroup = {post} />\r\n                                            {/* {post.drwtNo1} */}\r\n                                            {/* <LottoballGroup bollGroup={post} /> */}\r\n                                        </div>\r\n                                        <div className='lotooball-desc' >\r\n                                            <TitleLabal title={'날짜'} value={post.drwNoDate} />\r\n                                            <TitleLabal title={'총당첨금'} value={post.firstAccumamnt} />\r\n                                            <TitleLabal title={'1등 당첨자수'} value={post.firstPrzwnerCo} />\r\n                                             <TitleLabal title={'1등 수령액'} value={post.firstWinamnt} />\r\n                                            {/* <TitleLabal drwtDate={post.drwNoDate}/>\r\n                                            <TitleLabal drwtDate={post.firstAccumamnt} />\r\n                                            <TitleLabal drwtDate={post.firstPrzwnerCo} />\r\n                                            <TitleLabal drwtDate={post.firstWinamnt} /> */}\r\n                                        </div>\r\n                                        \r\n                                        {/* <p className=\"sol\">날짜 : {post.drwNoDate}</p>\r\n                                        <p className=\"sol\">총당첨금 : {post.firstAccumamnt}</p>\r\n                                        <p className=\"sol\">1등 당첨자수 : {post.firstPrzwnerCo}</p>\r\n                                        <p className=\"sol\">1등 수령액 : {post.firstWinamnt}</p> */}\r\n                                        {/* <p>{post.returnValue}</p> */}\r\n                                    </div>\r\n                                )\r\n                        )\r\n                }\r\n                {/* {this.state.lotto ? this._renderLotto() : \"logding\"}  */}\r\n                {/* {this._renderLotto()} */}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        turn: state.counter,\r\n        post: state.post.data,\r\n        loading: state.post.pending,\r\n        error: state.post.error,\r\n        //id: state.post.id\r\n    }),\r\n    (dispatch) => ({\r\n        CounterActions: bindActionCreators(counterActions, dispatch),\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n    })\r\n)(Turn);","import React from 'react';\r\nimport Turn from '../Components/Turn';\r\n\r\nconst Home = ({ history }) => {\r\n    return (\r\n        <div>\r\n            {/* <h2>홈</h2>\r\n            <button onClick={()=>{\r\n                history.push('/about/javascript')\r\n            }}>자바스크립트를 사용하여 이동</button> */}\r\n            <Turn />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './CreateLottoBall.css';\r\n\r\nconst CreateLottoBall = ({cNumber}) => {\r\n\r\n    let styleName = 'lottoNum'\r\n    for (var i = 0; i < 6; i++) {\r\n        console.log('afterStr', cNumber);\r\n        if (cNumber > 1 && cNumber <= 10) {\r\n            styleName = 'lottoNum num-1-10'\r\n        } else if (cNumber > 10 && cNumber <= 20) {\r\n            styleName = 'lottoNum num-11-20'\r\n        } else if (cNumber > 20 && cNumber <= 30) {\r\n            styleName = 'lottoNum num-21-30'\r\n        } else if (cNumber > 30 && cNumber <= 40) {\r\n            styleName = 'lottoNum num-31-40'\r\n        } else {\r\n            styleName = 'lottoNum num-41-45'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className={styleName}>{cNumber}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateLottoBall;","import React, { Component } from 'react';\r\nimport './Createball.css';\r\nimport { CreateLottoBall } from '../CreateLottoBall';\r\n\r\nclass Createball extends Component {\r\n    \r\n    render() {\r\n        const { lotto_nums, id } = this.props.info;\r\n        //const { winLotto_nums } = this.props.winInfo;\r\n        const beforeStr = lotto_nums;\r\n        //const winBeforeStr = winLotto_nums;\r\n        const afterStr = beforeStr.split(',');\r\n        //const winAfterStr = winBeforeStr.split(',');\r\n        console.log(\"afterStr\", afterStr);\r\n        //console.log(\"winAfterStr\", winAfterStr);\r\n\r\n        return (\r\n            <div className=\"createBall\">\r\n                {/* winAfterStr\r\n                ?(\r\n                    <CreateLottoBall cNumber={winAfterStr[0]} />\r\n                    <CreateLottoBall cNumber={winAfterStr[1]} />\r\n                    <CreateLottoBall cNumber={winAfterStr[2]} />\r\n                    <CreateLottoBall cNumber={winAfterStr[3]} />\r\n                    <CreateLottoBall cNumber={winAfterStr[4]} />\r\n                    <CreateLottoBall cNumber={winAfterStr[5]} />\r\n                )\r\n                :(\r\n                    <CreateLottoBall cNumber={afterStr[0]} />\r\n                    <CreateLottoBall cNumber={afterStr[1]} />\r\n                    <CreateLottoBall cNumber={afterStr[2]} />\r\n                    <CreateLottoBall cNumber={afterStr[3]} />\r\n                    <CreateLottoBall cNumber={afterStr[4]} />\r\n                    <CreateLottoBall cNumber={afterStr[5]} />\r\n                    ) */}\r\n                <CreateLottoBall cNumber={afterStr[0]} />\r\n                <CreateLottoBall cNumber={afterStr[1]} />\r\n                <CreateLottoBall cNumber={afterStr[2]} />\r\n                <CreateLottoBall cNumber={afterStr[3]} />\r\n                <CreateLottoBall cNumber={afterStr[4]} />\r\n                <CreateLottoBall cNumber={afterStr[5]} />\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Createball;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as counterActions from '../modules/counter';\r\nimport * as postActions from '../modules/post';\r\nimport { LottoBall } from 'Components/LottoBall'\r\nimport { TitleLabal } from './TitleLabal';\r\nimport { LottoballGroup } from './LottoballGroup';\r\nimport { Createball } from './Createball';\r\nimport _ from 'underscore';\r\nimport './Game.css';\r\nclass Game extends Component {\r\n    state = {\r\n        lotto_nums : [],\r\n        chk_Click : 0,\r\n        winNumber : [],\r\n        bonus_number : 0,\r\n\r\n    }\r\n\r\n    generate = () => {\r\n        let lotto_nums = [];\r\n        _.times(45, n => lotto_nums.push(n + 1));\r\n        lotto_nums = _.shuffle(lotto_nums);\r\n        lotto_nums.length = 6;\r\n        this.setState({\r\n            lotto_nums\r\n        });\r\n    }\r\n\r\n    winGenerate = () => {\r\n        let winNumber = [];\r\n        _.times(45, n => winNumber.push(n + 1));\r\n        winNumber = _.shuffle(winNumber);\r\n        winNumber.length = 6;\r\n        this.setState({\r\n            winNumber\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onCreate({\r\n            lotto_nums: this.state.lotto_nums.join(', '),\r\n            winNumber: this.state.winNumber.join(', '),\r\n        });\r\n    }\r\n\r\n    winHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onWinCreate({\r\n            winNumber : this.state.winNumber.join(', '),\r\n        });\r\n    }\r\n\r\n    reload = (e) => {\r\n        e.preventDefault();\r\n        window.location.reload();\r\n    }\r\n\r\n    onlyOne = (e) => {\r\n        // e.preventDefault();\r\n        // this.generate()\r\n        // this.onClick = null;\r\n        console.log(\"chk_Click:\",this.state.chk_Click);\r\n        if(this.state.chk_Click == 0){\r\n            this.setState({\r\n                ...this.state,\r\n               chk_Click : 1\r\n            })\r\n            //this.winGenerate();\r\n            // this.state.lotto_nums.unshift(this.state.winNumber);\r\n            // this.setState({\r\n            // });            \r\n        \r\n            return this.generate();\r\n        }else {\r\n            e.preventDefault();\r\n            return this.onClick=null;\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    getRandomNum = () => {\r\n        let rand_num = Math.floor(Math.random() * 45 + 1)\r\n        return rand_num\r\n    }\r\n\r\n    checkDuplicatedNum = (lotto_num, ball_num) => {\r\n        if(lotto_num.includes(ball_num)){\r\n            return true\r\n        }else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    getWinNumberAnsBonusNumber = () => {\r\n        const winNumber = this.getLottoNums();\r\n        const bonus_number = this.getRandomNum();\r\n        this.setState({\r\n            bonus_number\r\n        });\r\n        while(true){\r\n            // const bonus_number = this.getRandomNum();\r\n            // this.setState({\r\n            //     bonus_number\r\n            // });\r\n\r\n            if (this.checkDuplicatedNum(winNumber, bonus_number)){\r\n                continue\r\n            }else {\r\n                break\r\n            }\r\n        }\r\n        return winNumber, bonus_number\r\n    }\r\n\r\n    getLottoNums = () => {\r\n        let winNumber = [];\r\n        _.times(45, n => winNumber.push(n + 1));\r\n        winNumber = _.shuffle(winNumber);\r\n        winNumber.length = 6;\r\n        this.setState({\r\n            winNumber\r\n        });\r\n        return winNumber;\r\n    }\r\n\r\n\r\n    checkWinLotto = (e) => {\r\n        e.preventDefault();\r\n        this.getWinNumberAnsBonusNumber();\r\n        const information = this.props;\r\n        console.log('this.props.information :', information)\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                {/* <button type=\"submit\" onClick={this.generate}>번호생성</button> */}\r\n                {/* <button onClick={this.onlyOne}>당첨번호 조회</button> */}\r\n                {/* <button onClick={this.checkWinLotto}>결과보기</button> */}\r\n                {/* <button onClick={this.reload}>초기화</button> */}\r\n                <div className=\"center\">\r\n                    <div className=\"createBallBtn\"> <a href=\"#\" className=\"btn btn-sm animated-buttonGame victoria-threeGame\"><p onClick={this.generate} className=\"fontrelation\"><button className=\"buttonStyle fontrelation\" type=\"submit\">번호생성</button></p></a> </div>\r\n                    <div className=\"\"> <a href=\"#\" className=\"btn btn-sm animated-buttonGame victoria-threeGame\"><p onClick={this.reload} className=\"fontrelation\">초기화</p></a> </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        turn: state.counter,\r\n        post: state.post.data,\r\n        loading: state.post.pending,\r\n        error: state.post.error,\r\n        //id: state.post.id\r\n    }),\r\n    (dispatch) => ({\r\n        CounterActions: bindActionCreators(counterActions, dispatch),\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n    })\r\n)(Game);","import React, { Component } from 'react';\r\nimport { Createball } from '../Createball';\r\n\r\nclass CreateballList extends Component {\r\n    static defaultProps = {\r\n        data: [],\r\n        winData: [],\r\n    }\r\n   \r\n    render() {\r\n        const { data, winData } = this.props;\r\n        //console.log('ballList: ', data);\r\n        \r\n            const list = data.map(\r\n                data\r\n                    ? (info => (<Createball info={info} key={info.id} />))\r\n                    \r\n                    : (console.log('ballList-list ; ', list)),\r\n                // winData\r\n                //     ? (winInfo => (<Createball winInfo={winInfo} key={winInfo.id} />))\r\n                //     : (console.log('ballList-list ; ', list))\r\n            )\r\n            // const winList = winData.map(\r\n            //     winData\r\n            //         ? (winInfo => (<Createball info={winInfo} key={winInfo.id} />))\r\n            //         : (console.log('winballList-list ; ', winList))\r\n            // )\r\n\r\n        return (\r\n            <div>\r\n                {winData}\r\n                {list}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateballList;","// import React from 'react';\r\n// import queryString from 'query-string';\r\n// import Game from '../Components/Game';\r\n\r\n// const About = ({location, match}) => {\r\n//     const query = queryString.parse(location.search);\r\n//     console.log(query);\r\n\r\n//     const {color} = query;\r\n//     return (\r\n//         <div>\r\n//             {/* About {match.params.name} */}\r\n//             <h2 style={{color}}>뭔가 넣을꺼야</h2>\r\n//             <Game />\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default About;\r\n\r\nimport React, { Component } from 'react';\r\nimport queryString from 'query-string';\r\nimport Game from '../Components/Game';\r\nimport CreateballList from '../Components/CreateballList/CreateballList';\r\nimport { WinNumber } from '../Components/WinNumber';\r\n\r\n\r\nclass About extends Component {\r\n    // id = 0;\r\n    state = {\r\n        information: [],\r\n        winInformation: [],\r\n    }\r\n\r\n    handleCreate = (data) => {\r\n        console.log(\"About_data :\",data);\r\n        const { information } = this.state;\r\n        this.setState({\r\n            information: information.concat({\r\n                ...data,\r\n                // id: this.id++\r\n            })\r\n        })\r\n    }\r\n\r\n    handleWinNumCreate = (winData) => {\r\n        console.log(\"About_winData :\", winData);\r\n        const { winInformation } = this.state;\r\n        this.setState({\r\n            winInformation: winInformation.concat({\r\n                ...winData,\r\n                // id: this.id++\r\n            })\r\n        })\r\n    }\r\n\r\n    handleRemove=() => {\r\n        // const {information} = this.state;\r\n        // this.setState({\r\n\r\n        // })\r\n        window.location.reload()\r\n    }\r\n\r\n    // winNumCreate = () => {\r\n    //     console.log(\"winNumCreate\")\r\n    //     const information = this.state.information\r\n    //     const infoLength = information.length;\r\n    //     this.setState({\r\n    //         ...this.state,\r\n    //         winInformation: information[(infoLength) - 1]\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n        const {location, match} = this.props;\r\n        const query = queryString.parse(location.search);\r\n        const information = this.state.information\r\n        const infoLength = information.length;\r\n        console.log(\"information\", this.state.information);\r\n        console.log(\"information_length : \", information[(infoLength)-1])\r\n\r\n        \r\n\r\n        const {color} = query;\r\n        return (\r\n            <div>\r\n                 {/* About {match.params.name} */}\r\n                <h2 style={{color}}>Lotto 번호생성기</h2>\r\n                {/* <button onClick={this.winNumCreate} >당첨번호</button> */}\r\n                {/* <WinNumber onWinCreate={this.handleWinNumCreate}/> */}\r\n                {/* <Game onCreate={this.handleCreate} onWinCreate={this.handleWinNumCreate} /> */}\r\n                <Game onCreate={this.handleCreate}/>\r\n                <CreateballList\r\n                    data={this.state.information}\r\n                    winData={this.state.winInformation}\r\n                />\r\n                \r\n                \r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport _ from 'underscore';\r\n\r\nclass WinNumber extends Component {\r\n    state = {\r\n        lotto_nums: [],\r\n        chk_Click: 0,\r\n    }\r\n\r\n    generate = () => {\r\n        let lotto_nums = [];\r\n        _.times(45, n => lotto_nums.push(n + 1));\r\n        lotto_nums = _.shuffle(lotto_nums);\r\n        lotto_nums.length = 6;\r\n        this.setState({\r\n            lotto_nums\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onWinCreate({\r\n            lotto_nums: this.state.lotto_nums.join(', '),\r\n        });\r\n    }\r\n\r\n    onlyOne = (e) => {\r\n        console.log(\"chk_Click:\", this.state.chk_Click);\r\n        if (this.state.chk_Click == 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                chk_Click: 1\r\n            })\r\n            return this.generate();\r\n        } else {\r\n            e.preventDefault();\r\n            return this.onClick = null;\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <button onClick={this.onlyOne}>당첨번호 조회</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WinNumber;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Menu.css';\r\n\r\n\r\nconst Menu = () => {\r\n    const activeStyle = {\r\n        color: '#ffc0cb',\r\n        fontWeight:'bold'\r\n    };\r\nconst style ={\r\n    color:'#c0c0c0',\r\n    \r\n}\r\n\r\n    return (\r\n        <div className=\"ulLiPosition\">\r\n                <ul>\r\n                    <li><NavLink exact to=\"/\" className=\"position\" style={style} activeStyle={activeStyle}>회차별 번호</NavLink></li>\r\n                    <li><NavLink exact to=\"/about\" className=\"position\" style={style} activeStyle={activeStyle}>로또게임</NavLink></li>\r\n                    {/* <li><NavLink to=\"/about/react\" activeStyle={activeStyle}>소개</NavLink></li> */}\r\n                    {/* <li><NavLink to=\"/posts\" activeStyle={activeStyle}>포스트목록</NavLink></li> */}\r\n                </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","// import React, { Component } from 'react';\r\n// import './App.css';\r\n// // import axios from 'axios';\r\n// //import Lotto from './Components/Lotto';\r\n\r\n// import { connect } from 'react-redux';\r\n// import * as counterActions from './modules/counter';\r\n// import { bindActionCreators } from 'redux';\r\n// import * as postActions from './modules/post';\r\n\r\n// class App extends Component {\r\n//   static defaultProps ={\r\n//     lotto: []\r\n//   }\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state ={\r\n//       lotto:[]\r\n//     };\r\n//   }\r\n\r\n//   // componentWillMount() {\r\n//   //   console.log(\"componentWillMount\");\r\n//   //   axios.get('/common.do?method=getLottoNumber&drwNo=852').then(res => {\r\n//   //     this.setState({lotto:res.data});\r\n//   //   });\r\n//   // }\r\n\r\n//   loadData = () => {\r\n//     const { PostActions, turn } = this.props;\r\n//     PostActions.getPost(turn);\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     console.log(\"componentDidMount\");\r\n//     // axios.get('/common.do?method=getLottoNumber&drwNo=852')\r\n//     // .then(res => console.log(res))\r\n//     this.loadData();\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.props.turn !== prevProps.turn) {\r\n//       this.loadData();\r\n//     }\r\n//   }\r\n  \r\n//   //_renderLotto = () => {\r\n//     //const lotto = this.state.lotto.map((data) => {\r\n//       // const lotto = this.state.lotto;\r\n//       // return <Lotto \r\n//       //   num1={lotto.drwtNo1}\r\n//       //   num2={lotto.drwtNo2}\r\n//       //   num3={lotto.drwtNo3}\r\n//       //   num4={lotto.drwtNo4}\r\n//       //   num5={lotto.drwtNo5}\r\n//       //   num6={lotto.drwtNo6}\r\n//       //   bnus={lotto.bnusNo}\r\n//       // />\r\n//     //})\r\n//     //return lotto;\r\n//   //}\r\n\r\n//   render() {\r\n//     //const {lotto} = this.state;\r\n//     const {CounterActions, turn, post, error, loading} = this.props;\r\n//     //console.log(\"123\", this.state.lotto)\r\n//     return (\r\n\r\n//       <div >\r\n//         <h1>{turn}회차</h1>\r\n//         <button onClick={CounterActions.increment}>+</button>\r\n//         <button onClick={CounterActions.decrement}>-</button>\r\n//         {\r\n//           loading\r\n//             ? (<h2>로딩중...</h2>)\r\n//             : (\r\n//               error\r\n//                 ? (<h2>오류발생!</h2>)\r\n//                 : (\r\n//                   <div>\r\n//                     <p>{post.drwtNo1}</p>\r\n//                     <p>{post.drwtNo2}</p>\r\n//                     <p>{post.drwtNo3}</p>\r\n//                     <p>{post.drwtNo4}</p>\r\n//                     <p>{post.drwtNo5}</p>\r\n//                     <p>{post.drwtNo6}</p>\r\n//                     <p>{post.bnusNo}</p>\r\n//                     <p>{post.drwNoDate}</p>\r\n//                   </div>\r\n//                 )\r\n//             )\r\n//         }\r\n//         {/* {this.state.lotto ? this._renderLotto() : \"logding\"}  */}\r\n//         {/* {this._renderLotto()} */}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default connect(\r\n//   (state) => ({\r\n//     turn: state.counter,\r\n//     post: state.post.data,\r\n//     loading: state.post.pending,\r\n//     error: state.post.error,\r\n//     //id: state.post.id\r\n//   }),\r\n//   (dispatch) => ({\r\n//     CounterActions: bindActionCreators(counterActions, dispatch),\r\n//     PostActions: bindActionCreators(postActions, dispatch)\r\n//   })\r\n// )(App);\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route } from 'react-router-dom';\r\nimport { Home, About} from 'pages';\r\n// import axios from 'axios';\r\nimport Menu from './Components/Menu';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div><h1>HyungMin Lotto!!!</h1></div>\r\n        <Menu className=\"MenuCss\" />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/about\" component={About} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport post from './post'\r\n\r\nexport default combineReducers({\r\n    counter,\r\n    post\r\n});","import {createStore, applyMiddleware } from 'redux';\r\nimport modules from './modules';\r\n\r\nimport { createLogger } from 'redux-logger';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst logger = createLogger();\r\n\r\nconst store = createStore(modules, applyMiddleware(logger,ReduxThunk))\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Root />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}